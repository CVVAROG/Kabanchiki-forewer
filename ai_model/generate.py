import pandas as pd
import random
from pathlib import Path

rng = random.Random(20250925)

TOPICS = ["Кредитные карты", "Вклады", "Ипотека", "Мобильное приложение", "Обслуживание"]

PHRASES = {
    "Кредитные карты": {
        "pos": ["Кредитку одобрили быстро, всё прозрачно.",
                "Кэшбэк реально приходит, пользоваться удобно.",
                "Условия по карте понятные, без скрытых комиссий."],
        "neu": ["Карту оформили как обычно, лимит средний.",
                "Прислали карту по почте, задержек не было.",
                "Обычная карта: ни вау, ни плохо."],
        "neg": ["Лимит маленький, отказали в повышении.",
                "Навязали страховку при оформлении.",
                "Комиссии оказались неожиданными."]
    },
    "Вклады": {
        "pos": ["Открыл вклад, ставка хорошая, проценты начислили верно.",
                "Пополнение с карты прошло мгновенно.",
                "Всё по договору, без сюрпризов."],
        "neu": ["Ставка средняя, условий минимум.",
                "Стандартный вклад, ничего особенного.",
                "Просто припарковал деньги."],
        "neg": ["Ставка оказалась ниже обещанной.",
                "Ошибка в договоре, пришлось переподписывать.",
                "Закрыть вклад оказалось сложно."]
    },
    "Ипотека": {
        "pos": ["Одобрение ипотеки пришло быстро, ставка адекватная.",
                "Куратор помог с документами, доволен.",
                "Условия соответствовали ожиданиям."],
        "neu": ["Оформили ипотеку в разумные сроки.",
                "Документы приняли как обычно.",
                "В целом стандартные условия."],
        "neg": ["Одобрение затянули без объяснений.",
                "Плохо объяснили условия страховки.",
                "Перерасчёт платежа пришёл неожиданно."]
    },
    "Мобильное приложение": {
        "pos": ["Приложение работает быстро, переводы проходят.",
                "После обновления стало удобнее.",
                "Все функции под рукой, нравится."],
        "neu": ["Работает, основные функции есть.",
                "Пару раз зависало, но не критично.",
                "Базовые задачи решает."],
        "neg": ["Приложение зависает на переводах.",
                "Ошибка при входе в приложение.",
                "Пуши приходят нестабильно."]
    },
    "Обслуживание": {
        "pos": ["В отделении встретили вежливо, вопрос решили быстро.",
                "В чате ответили по делу.",
                "Очереди почти не было, помогли с анкетой."],
        "neu": ["Обычное обслуживание: очередь, стандартные ответы.",
                "Созвонились, переключали несколько раз.",
                "В целом как у большинства банков."],
        "neg": ["Очередь огромная, персонал недружелюбный.",
                "В чате отвечали долго, проблему не решили.",
                "Дозвониться на горячую линию было сложно."]
    }
}

def make_review(topics):
    sentiments = []
    parts = []
    for t in topics:
        s = rng.choice(["pos","neu","neg"])
        sentiments.append({"pos":"положительно","neu":"нейтрально","neg":"отрицательно"}[s])
        parts.append(rng.choice(PHRASES[t][s]))
    text = parts[0]
    for p in parts[1:]:
        text += " но " + p.lower()
    return text, sentiments

N = 5000
n3, n2 = 500, 750
n1 = N - n3 - n2

rows = []
idx = 1

for _ in range(n3):
    topics = rng.sample(TOPICS, 3)
    text, sents = make_review(topics)
    rows.append([idx, text, ";".join(topics), ";".join(sents)])
    idx += 1

for _ in range(n2):
    topics = rng.sample(TOPICS, 2)
    text, sents = make_review(topics)
    rows.append([idx, text, ";".join(topics), ";".join(sents)])
    idx += 1

for _ in range(n1):
    topics = [rng.choice(TOPICS)]
    text, sents = make_review(topics)
    rows.append([idx, text, ";".join(topics), ";".join(sents)])
    idx += 1

df = pd.DataFrame(rows, columns=["id","text","topics","sentiments"])
df.to_csv("reviews.csv", index=False, encoding="utf-8")

print("✅ Файл сохранён: gpb_train_5000_human_v43.csv")
